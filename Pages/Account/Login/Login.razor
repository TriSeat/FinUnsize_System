@page "/login"
@page "/user/login"
@layout SignLayout
@inject ApiResponse apiResponse
@inject IJSRuntime jsRuntime;
@inject NavigationManager NavigationManager
@inject ICookieManager cookie

<PageTitle>Login</PageTitle>

<section class="sign__container">
    <div class="sign__image">
        <img src="./login.jpg">
    </div>
    <div class="sign__content">
        <div class="sign__main">
            <div class="sign__header">
                <div class="header__title">
                    <h1 class="title">Login</h1>
                </div>
                <div class="sign__header-btn">
                    <a><i class="fa-brands fa-google"></i>Entrar com o google</a>
                    <a><i class="fa-brands fa-github"></i>Entrar com o GitHub</a>
                </div>
                <div class="divider-lines">
                    <div class="line"></div><p>ou</p><div class="line"></div>
                </div>
            </div>
            <div class="sign__text">
                <div class="sign__payload">
                    <form @onsubmit="Entry">
                        <div>
                            <input type="text" placeholder="LOGIN" class="cvc" @bind="login" @ref="loginInput" autofocus required>
                            <input type="password" placeholder="Senha" class="titular" @bind="password" required>
                        </div>
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <p class="error-message">@errorMessage</p>
                        }
                        <div class="form-bottom">
                            <button type="submit" class="@btn">EFETUAR O LOGIN</button>
                            <p>Não possui uma conta? <a href="/user/company">Faça o Cadastro</a></p>
                        </div>
                        
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string login;
    private string password;
    private bool isLoading;
    private string btn;
    private string errorMessage;
    ElementReference loginInput;

    private async Task Entry()
    {
        isLoading = true;

        if (isLoading)
        {
            btn = "loading";
        }

        var endpoint = "user/login";
        var response = await apiResponse.Login(endpoint, login, password);

        isLoading = false;

        if (response == "200")
        {
            NavigationManager.NavigateTo("/count");
        }
        else
        {
            errorMessage = "Login ou Senha estão incorretos";
            loginInput.FocusAsync();
            btn = null;
        }
    }
}
